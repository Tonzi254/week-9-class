terraform {
  required_providers {
    docker = {
      source  = "kreuzwerker/docker"
      version = "3.0.2"
    }
  }
}

provider "docker" {}

# Pull an image

# resource "docker_image" "sonarqube" {
#     name = "sonarqube:latest"
# }

# Pull multiple images

resource "docker_image" "images" {
    count = length(var.docker_images)
    name = var.docker_images[count.index]
}

# Start a container with the image

# resource "docker_container" "terraform-sonarqube" {
#     name = "terraform-sonarqube"
#     image = docker_image.sonarqube.image_id
#     depends_on = [ docker_image.sonarqube ]
# }

# Start multiple containers with the images

resource "docker_container" "containers" {
    count = length(docker_image.images)
    name = "container${count.index}"
    image = docker_image.images[count.index].name
}

# provider "docker" {
#   registry   = "index.docker.io"
#   username   = ""
#   password   = ""
# }

# data "docker_registry_image" "debian" {
#   name = "library/debian"
#   tag  = "latest"
# }

# # Pulls the image
# resource "docker_image" "ubuntu" {
#   name = "ubuntu:latest"
# }

# # Create a container
# resource "docker_container" "foo" {
#   image = docker_image.ubuntu.image_id
#   name  = "foo"
# }